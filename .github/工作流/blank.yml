#include <iostream>
#include <stdlib.h>
#include <time.h>
using namespace std;

void menu()  //显示菜单
{
    cout<<"*************************\n";
    cout<<"**** 1.Play   0.Exit ****\n";
    cout<<"*************************\n";
}

void InitBoard(char board[3][3])  //初始化棋盘
{
    int i, j;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 3; j++)
        {
            board[i][j] = ' ';
        }
    }
}

void DisplayBoard(char board[3][3])  //显示棋盘
{
    int i, j;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 3; j++)
        {
            cout << " " << board[i][j] << " ";
            if (j < 2)
                cout<<"|";
        }
        cout<<endl;
        if (i < 2)
        {
            for (j = 0; j < 3; j++)
            {
                cout<<"___";
                if (j < 2)
                    cout<<"|";
            }
            cout<<endl;
        }
        else
        {
            for (j = 0; j < 3; j++)
            {
                cout << "   ";
                if (j < 2)
                    cout << "|";
            }
            cout << endl;
        }
    }
}

void PlayerMove(char board[3][3])  //玩家走棋
{
    int x, y;
    cout << "玩家走：\n";
    while (1)
    {
        cout << "请输入要下的坐标：";
        cin >> x >> y;
        if (x >= 1 && x <= 3 && y >= 1 && y <= 3)
        {
            if (board[x - 1][y - 1] == ' ')
            {
                board[x - 1][y - 1] = '*';
                break;
            }
            else
                cout << "该坐标被占用,请重新输入\n";
        }
        else
            cout << "坐标非法，请重新输入!\n";
    }
}

void ComputerMove(char board[3][3])  //电脑走棋
{
    int x, y;
    cout << "电脑走: \n";
    while (1)
    {
        x = rand() % 3;
        y = rand() % 3;
        if (board[x][y] == ' ')
        {
            board[x][y] = '#';
            break;
        }
    }
}

int IsFull(char board[3][3])  //平局判定
{
    int i, j;
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 3; j++)
        {
            if(board[i][j] == ' ')
            return 0;
        }
    }
    return 1;
}

char IsWin(char board[3][3])  //胜负判定
{
    int i;
    for (i = 0; i < 3; i++)
    {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ')
            return board[i][0];
    }
    for (i = 0; i < 3; i++)
    {
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' ')
            return board[0][i];
    }
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ')
        return board[0][0];
    if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[2][0] != ' ')
        return board[2][0];
    if (1 == IsFull(board))
        return 'Q';
    return 'C';
}

void game()  //游戏函数
{
    char ret;
    char board[3][3];
    InitBoard(board);
    DisplayBoard(board);
    while (1)
    {
        PlayerMove(board);
        DisplayBoard(board);
        ret = IsWin(board);
        if (ret != 'C')
            break;
        ComputerMove(board);
        DisplayBoard(board);
        ret = IsWin(board);
        if (ret != 'C')
            break;
    }
    if (ret == '*')
        cout << "玩家赢\n";
    else if (ret == '#')
        cout << "电脑赢\n";
    else
        cout << "平局\n";
}

int main()
{
    int input;
    srand((unsigned int)time(NULL));
    do
    {
        menu();
        cout << "请选择：";
        cin >> input;
        switch (input)
        {
        case 1:
            game();
            break;
        case 0:
            cout << "退出游戏\n";
            break;
        default:
            cout << "选择错误，请重新选择!\n";
            break;
        }
    } while (input);
    return 0;
}
